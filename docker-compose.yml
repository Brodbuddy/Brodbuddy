services:
  postgres:
    image: postgres:16-alpine
    environment:
      - POSTGRES_USER=${APPOPTIONS__POSTGRES__USERNAME:-user}
      - POSTGRES_PASSWORD=${APPOPTIONS__POSTGRES__PASSWORD:-pass}
      - POSTGRES_DB=${APPOPTIONS__POSTGRES__DATABASE:-db}
    ports:
      - '${APPOPTIONS__POSTGRES__PORT:-5432}:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always
    profiles: ["deploy"]
  
  flyway:
    image: flyway/flyway:latest
    depends_on:
      - postgres
    environment:
      FLYWAY_URL: jdbc:postgresql://postgres:5432/${APPOPTIONS__POSTGRES__DATABASE:-db}
      FLYWAY_USER: ${APPOPTIONS__POSTGRES__USERNAME:-user}
      FLYWAY_PASSWORD: ${APPOPTIONS__POSTGRES__PASSWORD:-pass}
      FLYWAY_CONNECT_RETRIES: 5
      FLYWAY_LOCATIONS: filesystem:/flyway/sql
    volumes:
      - ./db/migrations:/flyway/sql
    command: migrate
    profiles: ["deploy"]
    
  dragonfly:
    image: docker.dragonflydb.io/dragonflydb/dragonfly
    ulimits:
      memlock: -1
    ports:
      - '${APPOPTIONS__DRAGONFLY__PORT:-6379}:6379'
    volumes:
      - dragonflydata:/data
    profiles: ["deploy"]
  
  mailhog:
    image: mailhog/mailhog
    ports:
      - '1025:1025'
      - '8025:8025'
    restart: always
    profiles: ["dev"]
    
  seq:
    image: datalust/seq
    environment:
      - ACCEPT_EULA=Y
    ports:
      - '5341:80'
    volumes:
      - seq_data:/data
    restart: unless-stopped
    profiles: ["deploy"]
  
  zipkin:
    image: openzipkin/zipkin:latest
    ports:
      - '9411:9411'
    restart: unless-stopped
    profiles: ["deploy"]
    
  vernemq:
    image: vernemq/vernemq
    ports:
      - "${APPOPTIONS__MQTT__MQTTPORT:-1883}:1883"      # Standard MQTT port for ESP32
      - "${APPOPTIONS__MQTT__WEBSOCKETPORT:-8080}:8080" # MQTT over WebSockets for browser klienter, f.eks. HiveMQTT .NET client
    environment:
      - DOCKER_VERNEMQ_ACCEPT_EULA=yes        # Accepterer 'End User License Agreement' (EULA) ligesom for Seq
      - DOCKER_VERNEMQ_ALLOW_ANONYMOUS=off    # Gør sådan at man skal autentificere sig
      - DOCKER_VERNEMQ_USER_${APPOPTIONS__MQTT__USERNAME:-user}=${APPOPTIONS__MQTT__PASSWORD:-pass}
    volumes:
      - vernemq-data:/var/lib/vernemq # Behøves ikke, men gør sådan at vi kan opbevare data
    restart: unless-stopped # Gør sådan at broker genstarter på system reboot
    profiles: ["deploy"]
    
  backend:
    image: ${SERVER_IMAGE_TAG:-ghcr.io/brodbuddy/brodbuddy-backend:latest}
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      - postgres
      - dragonfly
      - vernemq
    profiles: ["deploy"]

  frontend:
    image: ${CLIENT_IMAGE_TAG:-ghcr.io/brodbuddy/brodbuddy-frontend:latest}
    environment:
      - VITE_HTTP_URL=${VITE_HTTP_URL}
      - VITE_WS_URL=${VITE_WS_URL}
    restart: unless-stopped
    profiles: ["deploy"]

  nginx:
    image: nginx:stable-alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      # Mount directory hvor config fil bliver placeret efter deploy
      - type: bind
        source: ./nginx_config # Host path relativt til docker-compose.yml
        target: /etc/nginx/conf.d # Inde i container
        read_only: true
      # Mount Nginx logs
      - type: volume
        source: nginx_logs
        target: /var/log/nginx
      # Mount Let's Encrypt certifikater for SSL
      - type: bind
        source: /etc/letsencrypt
        target: /etc/letsencrypt
        read_only: true
    depends_on:
      - backend
      - frontend
    profiles: ["deploy"]

volumes:
  postgres_data:
  dragonflydata:
  vernemq-data:
  seq_data:
  nginx_logs: